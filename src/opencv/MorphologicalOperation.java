/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opencv;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author alian
 */
public class MorphologicalOperation extends javax.swing.JFrame {

    static BufferedImage image;
    static boolean imageLoaded = false;
    String imagePath;
    String currentImagePath = "src//opencv//images//output//fourth.png";
    String tempImageProcessPath = "D://harf.png";

    /**
     * Creates new form MorphologicalOperation
     */
    public MorphologicalOperation(String imagePath) {

        this.imagePath = imagePath;
        initComponents();

        try {
            //init image proces
            /*  File fileExample = new File(tempImageProcessPath);
            BufferedImage imageTemp  = ImageIO.read(fileExample);
            //init image process
            imageBoxFourthScreen.setIcon(new ImageIcon(imageTemp));
             */

            File f = new File(imagePath);
            BufferedImage image;
            image = ImageIO.read(f);
            writeImage(image);
            imageBoxFourthScreen.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            Logger.getLogger(FilterScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(this.imagePath);
        this.setLocationRelativeTo(null);
    }

    public void writeImage(BufferedImage image) throws IOException {
        File outputfile = new File(currentImagePath);
        ImageIO.write(image, "png", outputfile);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        imageBoxFourthScreen = new javax.swing.JLabel();
        acceptMorphologicalOperation = new javax.swing.JRadioButton();
        declineMorphologicalOperation = new javax.swing.JRadioButton();
        nextButtonOnFourthScreen = new javax.swing.JButton();
        backButtonOnFourthScreen = new javax.swing.JButton();
        MorphologicalOperationsCombobox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        buttonGroup1.add(acceptMorphologicalOperation);
        acceptMorphologicalOperation.setText("Morf. İşl. uygulamak istiyorum");
        acceptMorphologicalOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptMorphologicalOperationActionPerformed(evt);
            }
        });

        buttonGroup1.add(declineMorphologicalOperation);
        declineMorphologicalOperation.setSelected(true);
        declineMorphologicalOperation.setText("Morf. İşl. uygulamak istemiyorum");
        declineMorphologicalOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineMorphologicalOperationActionPerformed(evt);
            }
        });

        nextButtonOnFourthScreen.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        nextButtonOnFourthScreen.setLabel("İleri >");
        nextButtonOnFourthScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonOnFourthScreenActionPerformed(evt);
            }
        });

        backButtonOnFourthScreen.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        backButtonOnFourthScreen.setLabel("< Geri");
        backButtonOnFourthScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnFourthScreenActionPerformed(evt);
            }
        });

        MorphologicalOperationsCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morfolojik İşlemler", "Siyah beyaz resimde genişletme", "Siyah beyaz resimde erozyon", "Siyah beyaz resimde açma", "Siyah beyaz resimde kapama" }));
        MorphologicalOperationsCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MorphologicalOperationsComboboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acceptMorphologicalOperation)
                    .addComponent(declineMorphologicalOperation)
                    .addComponent(MorphologicalOperationsCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(imageBoxFourthScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backButtonOnFourthScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(nextButtonOnFourthScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(acceptMorphologicalOperation)
                        .addGap(33, 33, 33)
                        .addComponent(declineMorphologicalOperation)
                        .addGap(56, 56, 56)
                        .addComponent(MorphologicalOperationsCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imageBoxFourthScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backButtonOnFourthScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(nextButtonOnFourthScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MorphologicalOperationsComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MorphologicalOperationsComboboxActionPerformed
        System.out.println("Tetiklendi" + MorphologicalOperationsCombobox.getSelectedIndex() + "");

        if (MorphologicalOperationsCombobox.getSelectedIndex() == 1) {

            imageFX.MyImage myImage = new imageFX.MyImage(800, 600);
            myImage.readImage(imagePath);
            myImage = Dilation.grayscaleImage(myImage);
            imageBoxFourthScreen.setIcon(new ImageIcon(myImage.getImage()));
            try {
                writeImage(myImage.getImage());
            } catch (IOException ex) {
                Logger.getLogger(MorphologicalOperation.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
        if (MorphologicalOperationsCombobox.getSelectedIndex() == 2) {

            imageFX.MyImage myImage = new imageFX.MyImage(800, 600);
            myImage.readImage(imagePath);
            myImage = Erosion.grayscaleImage(myImage);
            imageBoxFourthScreen.setIcon(new ImageIcon(myImage.getImage()));
            try {
                writeImage(myImage.getImage());
            } catch (IOException ex) {
                Logger.getLogger(MorphologicalOperation.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
        if (MorphologicalOperationsCombobox.getSelectedIndex() == 3) {

            imageFX.MyImage myImage = new imageFX.MyImage(800, 600);
            myImage.readImage(imagePath);
            myImage = Dilation.binaryImage(Erosion.binaryImage(myImage, true), true);
            imageBoxFourthScreen.setIcon(new ImageIcon(myImage.getImage()));
            try {
                writeImage(myImage.getImage());
            } catch (IOException ex) {
                Logger.getLogger(MorphologicalOperation.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
        if (MorphologicalOperationsCombobox.getSelectedIndex() == 4) {

            imageFX.MyImage myImage = new imageFX.MyImage(800, 600);
            myImage.readImage(imagePath);
            myImage = Erosion.binaryImage(Dilation.binaryImage(myImage, true), false);
            imageBoxFourthScreen.setIcon(new ImageIcon(myImage.getImage()));
            try {
                writeImage(myImage.getImage());
            } catch (IOException ex) {
                Logger.getLogger(MorphologicalOperation.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_MorphologicalOperationsComboboxActionPerformed

    private void nextButtonOnFourthScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonOnFourthScreenActionPerformed
        SegmentationScreen segmentationScreen = new SegmentationScreen(currentImagePath);
        segmentationScreen.setVisible(true);
        this.setVisible(false);              // TODO add your handling code here:
    }//GEN-LAST:event_nextButtonOnFourthScreenActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        MorphologicalOperationsCombobox.setEnabled(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void declineMorphologicalOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineMorphologicalOperationActionPerformed
        MorphologicalOperationsCombobox.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_declineMorphologicalOperationActionPerformed

    private void acceptMorphologicalOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptMorphologicalOperationActionPerformed
        MorphologicalOperationsCombobox.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_acceptMorphologicalOperationActionPerformed

    private void backButtonOnFourthScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonOnFourthScreenActionPerformed
        if (declineMorphologicalOperation.isSelected()) {
            FilterScreen filterScreen;
            filterScreen = new FilterScreen("src//opencv//images//output//third.png");
            filterScreen.setVisible(true);
            this.setVisible(false);
        } else {
            FilterScreen filterScreen;
            filterScreen = new FilterScreen("src//opencv//images//output//fourth.png");
            filterScreen.setVisible(true);
            this.setVisible(false);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonOnFourthScreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MorphologicalOperation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MorphologicalOperation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MorphologicalOperation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MorphologicalOperation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MorphologicalOperation("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MorphologicalOperationsCombobox;
    private javax.swing.JRadioButton acceptMorphologicalOperation;
    private javax.swing.JButton backButtonOnFourthScreen;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton declineMorphologicalOperation;
    private javax.swing.JLabel imageBoxFourthScreen;
    private javax.swing.JButton nextButtonOnFourthScreen;
    // End of variables declaration//GEN-END:variables
}
